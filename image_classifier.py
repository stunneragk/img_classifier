# -*- coding: utf-8 -*-
"""Image_Classifier.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rFko-dV0YxqhszB1Kk8xHtSLJHTcH2JA
"""

from google.colab import drive
drive.mount('/content/drive', force_remount=True)

!unzip 'drive/My Drive/dataset.zip'

import zipfile
zip_ref = zipfile.ZipFile('drive/My Drive/dataset.zip', 'r')
zip_ref.extractall('drive/My Drive/dataset')
zip_ref.close()

from keras.models import Sequential
from keras.layers import Convolution2D
from keras.layers import MaxPooling2D
from keras.layers import Flatten
from keras.layers import Dense

# Start the CNN
classifier = Sequential()

# Convolution
classifier.add(Convolutiaon2D(32, 3, 3, input_shape = (128, 128, 3), activation= 'relu'))

# Pooling
classifier.add(MaxPooling2D(pool_size = (2, 2)))

# Flattening
classifier.add(Flatten())

# Full Connection
classifier.add(Dense(output_dim = 128, activation = 'relu'))
classifier.add(Dense(output_dim = 1, activation = 'sigmoid'))

# Compiling the CNN
classifier.compile(optimizer = 'adam', loss = 'binary_crossentropy', metrics = ['accuracy'])

from keras.preprocessing.image import ImageDataGenerator

train_datagen = ImageDataGenerator(
    rescale=1./255,
    shear_range=0.2,
    zoom_range=0.2,
    horizontal_flip=True
)

test_datagen = ImageDataGenerator(
    rescale=1./255
)

training_set = train_datagen.flow_from_directory(
    'dataset/train',
    target_size=(128,128),
    batch_size=162,
    class_mode='binary'
)

test_set = train_datagen.flow_from_directory(
    'dataset/validation',
    target_size=(128,128),
    batch_size=19,
    class_mode='binary'
)

from IPython.display import display
from PIL import Image

classifier.fit_generator(
    training_set,
    steps_per_epoch=800,
    epochs=3,
    validation_data=test_set,
    validation_steps=800
)

classifier.save('model.h5')